#!/usr/bin/env python3
"""
Interactive setup script for Pain Relief Map authentication
Run this to configure your Supabase credentials
"""

import os
from pathlib import Path

def main():
    print("=" * 60)
    print("üîê Pain Relief Map - Authentication Setup")
    print("=" * 60)
    print()
    
    # Check if .env already exists
    env_path = Path(".env")
    if env_path.exists():
        print("‚ö†Ô∏è  .env file already exists!")
        overwrite = input("Do you want to overwrite it? (y/N): ").lower()
        if overwrite != 'y':
            print("Setup cancelled.")
            return
        print()
    
    print("This script will help you set up authentication.")
    print()
    print("You'll need:")
    print("  1. A Supabase account (free at https://supabase.com)")
    print("  2. Your Project URL")
    print("  3. Your anon/public API key")
    print()
    print("Don't have these yet? Follow the guide:")
    print("  ‚Üí Open QUICKSTART_AUTH.md")
    print()
    
    # Ask for Supabase URL
    print("Step 1: Enter your Supabase Project URL")
    print("  (Example: https://abcdefgh.supabase.co)")
    supabase_url = input("Project URL: ").strip()
    
    if not supabase_url.startswith("https://"):
        print("‚ö†Ô∏è  URL should start with https://")
        supabase_url = "https://" + supabase_url.replace("http://", "")
    
    print()
    
    # Ask for Supabase key
    print("Step 2: Enter your Supabase anon/public key")
    print("  (Found in: Settings ‚Üí API ‚Üí anon public)")
    print("  (Long string starting with eyJ...)")
    supabase_key = input("API Key: ").strip()
    
    print()
    
    # Optional: Demo mode
    print("Step 3: Enable demo mode? (optional)")
    print("  Demo mode lets users test without signing up")
    demo_mode = input("Enable demo mode? (Y/n): ").lower()
    demo_enabled = "True" if demo_mode != 'n' else "False"
    
    print()
    
    # Create .env file
    env_content = f"""# Pain Relief Map - Environment Configuration
# Auto-generated by setup_auth.py

# Supabase Configuration
SUPABASE_URL={supabase_url}
SUPABASE_KEY={supabase_key}

# App Configuration
APP_MODE=production
DEBUG=False
DEMO_MODE={demo_enabled}
"""
    
    try:
        with open(env_path, 'w') as f:
            f.write(env_content)
        
        print("‚úÖ Configuration saved to .env")
        print()
        
        # Next steps
        print("=" * 60)
        print("üéâ Setup Complete!")
        print("=" * 60)
        print()
        print("Next steps:")
        print()
        print("1. Install dependencies:")
        print("   pip install -r requirements.txt")
        print()
        print("2. Set up database tables:")
        print("   ‚Üí Go to Supabase Dashboard")
        print("   ‚Üí Open SQL Editor")
        print("   ‚Üí Copy-paste contents of scripts/create_user_tables.sql")
        print("   ‚Üí Click Run")
        print()
        print("3. Run the app:")
        print("   python -m streamlit run app/app_v4_auth.py")
        print()
        print("Need help? Check:")
        print("  ‚Ä¢ QUICKSTART_AUTH.md - Quick 5-minute guide")
        print("  ‚Ä¢ AUTHENTICATION_SETUP.md - Detailed instructions")
        print()
        
        # Test connection
        test = input("Do you want to test the connection now? (Y/n): ").lower()
        if test != 'n':
            print()
            print("Testing connection...")
            test_connection(supabase_url, supabase_key)
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        return

def test_connection(url, key):
    """Test if Supabase credentials work"""
    try:
        from supabase import create_client
        
        print("  ‚Üí Creating Supabase client...")
        client = create_client(url, key)
        
        print("  ‚Üí Testing connection...")
        # Simple query to test connection
        response = client.table("user_profiles").select("count", count="exact").limit(0).execute()
        
        print("  ‚úÖ Connection successful!")
        print(f"  ‚Üí Found {response.count or 0} user profiles in database")
        print()
        
        if response.count == 0:
            print("üí° Tip: No users yet. Run the app and create your first account!")
        
    except ImportError:
        print("  ‚ö†Ô∏è  Supabase package not installed")
        print("  ‚Üí Run: pip install supabase")
    except Exception as e:
        error_msg = str(e)
        print(f"  ‚ùå Connection failed: {error_msg}")
        print()
        
        if "table" in error_msg.lower():
            print("  ‚Üí Looks like tables don't exist yet")
            print("  ‚Üí Run the SQL schema in Supabase (see step 2 above)")
        elif "401" in error_msg:
            print("  ‚Üí Check your API key is correct")
            print("  ‚Üí Make sure you're using the 'anon' key, not 'service_role'")
        else:
            print("  ‚Üí Check your credentials are correct")
            print("  ‚Üí Check QUICKSTART_AUTH.md for troubleshooting")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nSetup cancelled by user.")
    except Exception as e:
        print(f"\n‚ùå Unexpected error: {e}")
        print("Please create .env file manually using config.env.example as template")

